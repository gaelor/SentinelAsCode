{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Add_NSG_Rule": {
                "inputs": {
                    "authentication": {
                        "type": "ManagedServiceIdentity"
                    },
                    "body": {
                        "name": "Sentinel_@{outputs('Month')?['body']}_@{body('Alert_-_Get_incident')?['properties']?['incidentNumber']}",
                        "properties": {
                            "access": "Deny",
                            "destinationAddressPrefix": "*",
                            "destinationAddressPrefixes": null,
                            "destinationApplicationSecurityGroups": [],
                            "destinationPortRange": "*",
                            "destinationPortRanges": null,
                            "direction": "Inbound",
                            "priority": "@{outputs('NSG_Priority')?['body']}",
                            "protocol": "*",
                            "sourceAddressPrefixes": "@outputs('IPS_Array')?['body']",
                            "sourceApplicationSecurityGroups": [],
                            "sourcePortRange": "*",
                            "sourcePortRanges": null
                        }
                    },
                    "headers": {
                        "Content-type": "application/json"
                    },
                    "method": "PUT",
                    "uri": "https://management.azure.com/subscriptions/@{triggerBody()?['WorkspaceSubscriptionId']}/resourceGroups/AccordInvest-resources/providers/Microsoft.Network/networkSecurityGroups/@{variables('nsg_group')}/securityRules/Sentinel_@{outputs('Month')?['body']}_@{body('Alert_-_Get_incident')?['properties']?['incidentNumber']}?api-version=2019-02-01"
                },
                "runAfter": {
                    "IPS_Array": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "Alert_-_Get_incident": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                },
                "runAfter": {},
                "type": "ApiConnection"
            },
            "For_Each_NSG_Rules": {
                "actions": {
                    "For_Each_RuleName": {
                        "actions": {
                            "Filter Sentinel Rules": {
                                "actions": {
                                    "Filter Expiration": {
                                        "actions": {
                                            "Delete_Rule": {
                                                "inputs": {
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity"
                                                    },
                                                    "method": "DELETE",
                                                    "uri": "https://management.azure.com/subscriptions/c3a3408b-632a-4df4-9c92-deded42a7e48/resourceGroups/AccordInvest-resources/providers/Microsoft.Network/networkSecurityGroups/AccordInvest-syslog-nsg/securityRules/Sentinel_@{outputs('RuleName')?['body']}?api-version=2020-07-01"
                                                },
                                                "runAfter": {},
                                                "type": "Http"
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "less": [
                                                        "@ticks(outputs('RuleDate')['body'])",
                                                        "@ticks(addDays(utcNow(),variables('expiration')))"
                                                    ]
                                                }
                                            ]
                                        },
                                        "runAfter": {
                                            "Set_Date": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "If"
                                    },
                                    "RuleDate": {
                                        "inputs": {
                                            "code": "var nsr_date = workflowContext.actions.Sentinel_RuleName.outputs;\r\n\r\nreturn nsr_date.replace(/^../,'').replace(/.....$/,'').replace(/^Sentinel_/,'');"
                                        },
                                        "runAfter": {
                                            "RuleName": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "JavaScriptCode"
                                    },
                                    "RuleName": {
                                        "inputs": {
                                            "code": "var nsr_name = workflowContext.actions.Sentinel_RuleName.outputs;\r\n\r\nreturn nsr_name.replace(/^../,'').replace(/..$/,'').replace(/^Sentinel_/,'');"
                                        },
                                        "runAfter": {},
                                        "type": "JavaScriptCode"
                                    },
                                    "Set_Date": {
                                        "inputs": {
                                            "name": "date",
                                            "value": "@{addDays(utcNow(),-90)}"
                                        },
                                        "runAfter": {
                                            "RuleDate": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable"
                                    }
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "contains": [
                                                "@outputs('Sentinel_RuleName')",
                                                "Sentinel_"
                                            ]
                                        }
                                    ]
                                },
                                "runAfter": {
                                    "Sentinel_RuleName": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "If"
                            },
                            "Sentinel_RuleName": {
                                "inputs": "@items('For_Each_RuleName')",
                                "runAfter": {},
                                "type": "Compose"
                            }
                        },
                        "foreach": "@body('Select_RulesName')",
                        "runAfter": {
                            "Select_RulesName": [
                                "Succeeded"
                            ]
                        },
                        "type": "Foreach"
                    },
                    "For_Each_SecurityRules": {
                        "actions": {
                            "Append_to_NSG_Priorities": {
                                "inputs": {
                                    "name": "priority",
                                    "value": "@items('For_Each_SecurityRules')?['properties']?['priority']"
                                },
                                "runAfter": {},
                                "type": "AppendToArrayVariable"
                            }
                        },
                        "foreach": "@items('For_Each_NSG_Rules')?['properties']?['securityRules']",
                        "runAfter": {
                            "Select_RulesName": [
                                "Succeeded"
                            ]
                        },
                        "type": "Foreach"
                    },
                    "Select_RulesName": {
                        "inputs": {
                            "from": "@items('For_Each_NSG_Rules')?['properties']?['securityRules']",
                            "select": "@string(split(item()?['name'], '.'))"
                        },
                        "runAfter": {},
                        "type": "Select"
                    }
                },
                "foreach": "@body('NSG_JSON')?['value']",
                "runAfter": {
                    "NSG_JSON": [
                        "Succeeded"
                    ]
                },
                "type": "Foreach"
            },
            "IPS": {
                "inputs": "@body('IPS_JSON')?['Source IP(s) [Number of attempts]']",
                "runAfter": {
                    "IPS_JSON": [
                        "Succeeded"
                    ]
                },
                "type": "Compose"
            },
            "IPS_Array": {
                "inputs": {
                    "code": "var list = workflowContext.actions.IPS.outputs;\r\n\r\nconst search = 'IP: ';\r\nconst replaceWith = '';\r\n\r\nconst replace1 = list.split(search).join(replaceWith);\r\n\r\nconst searchRegExp = / .*/ig;\r\n\r\nconst ips = replace1.replace(searchRegExp, replaceWith).replace(/\\r\\n/ig,',').split(',');\r\n\r\nreturn ips;"
                },
                "runAfter": {
                    "IPS": [
                        "Succeeded"
                    ]
                },
                "type": "JavaScriptCode"
            },
            "IPS_JSON": {
                "inputs": {
                    "content": "@triggerBody()?['ExtendedProperties']",
                    "schema": {
                        "properties": {
                            "Destination Port": {
                                "type": "string"
                            },
                            "Investigation Steps": {
                                "type": "string"
                            },
                            "ProcessedBySentinel": {
                                "type": "string"
                            },
                            "Protocol": {
                                "type": "string"
                            },
                            "Source IP(s) [Number of attempts]": {
                                "type": "string"
                            },
                            "resourceType": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "Month": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "Init_Date": {
                "inputs": {
                    "variables": [
                        {
                            "name": "date",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "Init_Priority_Max": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Init_Expiration": {
                "inputs": {
                    "variables": [
                        {
                            "name": "expiration",
                            "type": "integer",
                            "value": -90
                        }
                    ]
                },
                "runAfter": {
                    "Alert_-_Get_incident": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Init_NSG_Group": {
                "inputs": {
                    "variables": [
                        {
                            "name": "nsg_group",
                            "type": "string",
                            "value": "AccordInvest-syslog-nsg"
                        }
                    ]
                },
                "runAfter": {
                    "Init_Expiration": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Init_NSG_Priorities": {
                "inputs": {
                    "variables": [
                        {
                            "name": "priority",
                            "type": "array"
                        }
                    ]
                },
                "runAfter": {
                    "Init_Date": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Init_Priority_Max": {
                "inputs": {
                    "variables": [
                        {
                            "name": "priority_max",
                            "type": "integer",
                            "value": 4000
                        }
                    ]
                },
                "runAfter": {
                    "Init_Priority_Min": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Init_Priority_Min": {
                "inputs": {
                    "variables": [
                        {
                            "name": "priority_min",
                            "type": "integer",
                            "value": 3000
                        }
                    ]
                },
                "runAfter": {
                    "Init_NSG_Group": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "List_NSG_Rules": {
                "inputs": {
                    "authentication": {
                        "type": "ManagedServiceIdentity"
                    },
                    "headers": {
                        "Content-type": "application/json"
                    },
                    "method": "GET",
                    "uri": "https://management.azure.com/subscriptions/c3a3408b-632a-4df4-9c92-deded42a7e48/resourceGroups/AccordInvest-resources/providers/Microsoft.Network/networkSecurityGroups?api-version=2020-07-01"
                },
                "runAfter": {
                    "Priority_Max": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "Month": {
                "inputs": {
                    "code": "var timestamp = workflowContext.trigger.outputs.body.TimeGenerated;\r\n\r\nconst replaceWith = '';\r\n\r\nconst searchRegExp = /...T.*/ig;\r\n\r\nconst month = timestamp.replace(searchRegExp, replaceWith);\r\n\r\nreturn month;"
                },
                "runAfter": {
                    "NSG_Priority": [
                        "Succeeded"
                    ]
                },
                "type": "JavaScriptCode"
            },
            "NSG_JSON": {
                "inputs": {
                    "content": "@body('List_NSG_Rules')",
                    "schema": {
                        "properties": {
                            "value": {
                                "items": {
                                    "properties": {
                                        "etag": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "location": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "properties": {
                                            "properties": {
                                                "defaultSecurityRules": {
                                                    "items": {
                                                        "properties": {
                                                            "etag": {
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "properties": {
                                                                "properties": {
                                                                    "access": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": {
                                                                        "type": "string"
                                                                    },
                                                                    "destinationAddressPrefix": {
                                                                        "type": "string"
                                                                    },
                                                                    "destinationAddressPrefixes": {
                                                                        "type": "array"
                                                                    },
                                                                    "destinationPortRange": {
                                                                        "type": "string"
                                                                    },
                                                                    "destinationPortRanges": {
                                                                        "type": "array"
                                                                    },
                                                                    "direction": {
                                                                        "type": "string"
                                                                    },
                                                                    "priority": {
                                                                        "type": "integer"
                                                                    },
                                                                    "protocol": {
                                                                        "type": "string"
                                                                    },
                                                                    "provisioningState": {
                                                                        "type": "string"
                                                                    },
                                                                    "sourceAddressPrefix": {
                                                                        "type": "string"
                                                                    },
                                                                    "sourceAddressPrefixes": {
                                                                        "type": "array"
                                                                    },
                                                                    "sourcePortRange": {
                                                                        "type": "string"
                                                                    },
                                                                    "sourcePortRanges": {
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "id",
                                                            "etag",
                                                            "type",
                                                            "properties"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "networkInterfaces": {
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "id"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "provisioningState": {
                                                    "type": "string"
                                                },
                                                "resourceGuid": {
                                                    "type": "string"
                                                },
                                                "securityRules": {
                                                    "items": {
                                                        "properties": {
                                                            "etag": {
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "properties": {
                                                                "properties": {
                                                                    "access": {
                                                                        "type": "string"
                                                                    },
                                                                    "destinationAddressPrefix": {
                                                                        "type": "string"
                                                                    },
                                                                    "destinationAddressPrefixes": {
                                                                        "type": "array"
                                                                    },
                                                                    "destinationPortRange": {
                                                                        "type": "string"
                                                                    },
                                                                    "destinationPortRanges": {
                                                                        "type": "array"
                                                                    },
                                                                    "direction": {
                                                                        "type": "string"
                                                                    },
                                                                    "priority": {
                                                                        "type": "integer"
                                                                    },
                                                                    "protocol": {
                                                                        "type": "string"
                                                                    },
                                                                    "provisioningState": {
                                                                        "type": "string"
                                                                    },
                                                                    "sourceAddressPrefixes": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "sourcePortRange": {
                                                                        "type": "string"
                                                                    },
                                                                    "sourcePortRanges": {
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "id",
                                                            "etag",
                                                            "type",
                                                            "properties"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "id",
                                        "etag",
                                        "type",
                                        "location",
                                        "properties"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "List_NSG_Rules": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "NSG_Priority": {
                "inputs": {
                    "code": "var priority = workflowContext.actions.NSG_Properties.outputs;\r\n\r\n\r\nvar list = new Array();\r\nfor(var i=workflowContext.actions.Priority_Min.outputs; i<workflowContext.actions.Priority_Max.outputs; i++)\r\n  if(!priority.includes(i))\r\n    list.push(i);\r\n\r\nvar rand = list[Math.floor(Math.random() * list.length)];\r\n\r\nreturn rand;"
                },
                "runAfter": {
                    "NSG_Properties": [
                        "Succeeded"
                    ]
                },
                "type": "JavaScriptCode"
            },
            "NSG_Properties": {
                "inputs": "@variables('priority')",
                "runAfter": {
                    "For_Each_NSG_Rules": [
                        "Succeeded"
                    ]
                },
                "type": "Compose"
            },
            "Priority_Max": {
                "inputs": "@variables('priority_max')",
                "runAfter": {
                    "Priority_Min": [
                        "Succeeded"
                    ]
                },
                "type": "Compose"
            },
            "Priority_Min": {
                "inputs": "@variables('priority_min')",
                "runAfter": {
                    "Init_NSG_Priorities": [
                        "Succeeded"
                    ]
                },
                "type": "Compose"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            },
            "emailcontact": {
                "defaultValue": "Email address of an SOC analyst who can approve to block IP address of an incident",
                "type": "String"
            }
        },
        "triggers": {
            "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                "inputs": {
                    "body": {
                        "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                        }
                    },
                    "path": "/subscribe"
                },
                "type": "ApiConnectionWebhook"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "azuresentinel": {
                    "connectionId": "/subscriptions/c3a3408b-632a-4df4-9c92-deded42a7e48/resourceGroups/AccorInvest/providers/Microsoft.Web/connections/azuresentinel",
                    "connectionName": "azuresentinel",
                    "id": "/subscriptions/c3a3408b-632a-4df4-9c92-deded42a7e48/providers/Microsoft.Web/locations/westeurope/managedApis/azuresentinel"
                }
            }
        }
    }
}
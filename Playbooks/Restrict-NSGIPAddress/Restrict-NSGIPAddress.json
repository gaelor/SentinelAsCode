{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Restrict-NSGIPAddress",
            "type": "string"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        },
        "AzureSentinelConnectionName": {
            "defaultValue": "azuresentinel",
            "type": "string"
        },
        "MDATPConnectionName": {
            "defaultValue": "wdatp",
            "type": "string"
        },
        "integrationAccount": {
            "defaultValue": "integrationAccount",
            "type": "string"
        },
        "integrationAccount_resourceGroup": {
            "defaultValue": "integrationAccount_resourceGroup",
            "type": "string"
        },
        "CA_LocationName": {
            "defaultValue": "CA_LocationName",
            "type": "string"
        },
        "NSG_Group": {
            "defaultValue": "NSG_Group",
            "type": "string"
        },
        "NSG_ResourceGroup": {
            "defaultValue": "NSG_ResourceGroup",
            "type": "string"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"            
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "integrationAccount": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('integrationAccount_resourceGroup'), '/providers/Microsoft.Logic/integrationAccounts/', parameters('integrationAccount'))]"
                },
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "emailcontact": {
                            "defaultValue": "Email address of an SOC analyst who can approve to block IP address of an incident",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Add_NSG_Rule": {
                            "runAfter": {
                                "IPS_Array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "name": "Sentinel_@{outputs('Month')?['body']}_@{body('Alert_-_Get_incident')?['properties']?['incidentNumber']}",
                                    "properties": {
                                        "access": "Deny",
                                        "destinationAddressPrefix": "*",
                                        "destinationAddressPrefixes": null,
                                        "destinationApplicationSecurityGroups": [],
                                        "destinationPortRange": "*",
                                        "destinationPortRanges": null,
                                        "direction": "Inbound",
                                        "priority": "@{outputs('NSG_Priority')?['body']}",
                                        "protocol": "*",
                                        "sourceAddressPrefixes": "@outputs('IPS_Array')?['body']",
                                        "sourceApplicationSecurityGroups": [],
                                        "sourcePortRange": "*",
                                        "sourcePortRanges": null
                                    }
                                },
                                "headers": {
                                    "Content-type": "application/json"
                                },
                                "method": "PUT",
                                "uri": "https://management.azure.com/subscriptions/@{triggerBody()?['WorkspaceSubscriptionId']}/resourceGroups/@{variables('nsg_resourcegroup')}/providers/Microsoft.Network/networkSecurityGroups/@{variables('nsg_group')}/securityRules/Sentinel_@{outputs('Month')?['body']}_@{body('Alert_-_Get_incident')?['properties']?['incidentNumber']}?api-version=2019-02-01"
                            }
                        },
                        "Add_comment_to_incident_(V2)": {
                            "runAfter": {
                                "Add_NSG_Rule": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Value": "IPS are blocked in NSG and http status is @{outputs('Add_NSG_Rule')['statusCode']}.\n@{outputs('IPS_Array')?['body']}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "put",
                                "path": "/Comment/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/@{encodeURIComponent('Incident')}/@{encodeURIComponent(body('Alert_-_Get_incident')?['properties']?['incidentNumber'])}"
                            }
                        },
                        "Alert_-_Get_incident": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                            }
                        },
                        "For_Each_NSG_Rules": {
                            "foreach": "@body('NSG_JSON')?['value']",
                            "actions": {
                                "For_Each_RuleName": {
                                    "foreach": "@body('Select_RulesName')",
                                    "actions": {
                                        "Filter Sentinel Rules": {
                                            "actions": {
                                                "Filter Expiration": {
                                                    "actions": {
                                                        "Delete_Rule": {
                                                            "runAfter": {},
                                                            "type": "Http",
                                                            "inputs": {
                                                                "authentication": {
                                                                    "type": "ManagedServiceIdentity"
                                                                },
                                                                "method": "DELETE",
                                                                "uri": "https://management.azure.com/subscriptions/@{triggerBody()?['WorkspaceSubscriptionId']}/resourceGroups/@{variables('nsg_resourcegroup')}/providers/Microsoft.Network/networkSecurityGroups/@{variables('nsg_group')}/securityRules/Sentinel_@{outputs('RuleName')?['body']}?api-version=2020-07-01"
                                                                                 
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Set_Date": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "less": [
                                                                    "@ticks(outputs('RuleDate')['body'])",
                                                                    "@ticks(addDays(utcNow(),variables('expiration')))"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "RuleDate": {
                                                    "runAfter": {
                                                        "RuleName": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "JavaScriptCode",
                                                    "inputs": {
                                                        "code": "var nsr_date = workflowContext.actions.Sentinel_RuleName.outputs;\r\n\r\nreturn nsr_date.replace(/^../,'').replace(/.....$/,'').replace(/^Sentinel_/,'');"
                                                    }
                                                },
                                                "RuleName": {
                                                    "runAfter": {},
                                                    "type": "JavaScriptCode",
                                                    "inputs": {
                                                        "code": "var nsr_name = workflowContext.actions.Sentinel_RuleName.outputs;\r\n\r\nreturn nsr_name.replace(/^../,'').replace(/..$/,'').replace(/^Sentinel_/,'');"
                                                    }
                                                },
                                                "Set_Date": {
                                                    "runAfter": {
                                                        "RuleDate": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "date",
                                                        "value": "@{addDays(utcNow(),-90)}"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Sentinel_RuleName": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@outputs('Sentinel_RuleName')",
                                                            "Sentinel_"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Sentinel_RuleName": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "@items('For_Each_RuleName')"
                                        }
                                    },
                                    "runAfter": {
                                        "Select_RulesName": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "For_Each_SecurityRules": {
                                    "foreach": "@items('For_Each_NSG_Rules')?['properties']?['securityRules']",
                                    "actions": {
                                        "Append_to_NSG_Priorities": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "priority",
                                                "value": "@items('For_Each_SecurityRules')?['properties']?['priority']"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Select_RulesName": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Select_RulesName": {
                                    "runAfter": {},
                                    "type": "Select",
                                    "inputs": {
                                        "from": "@items('For_Each_NSG_Rules')?['properties']?['securityRules']",
                                        "select": "@string(split(item()?['name'], '.'))"
                                    }
                                }
                            },
                            "runAfter": {
                                "NSG_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "IPS": {
                            "runAfter": {
                                "IPS_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "@body('IPS_JSON')?['Source IP(s) [Number of attempts]']"
                        },
                        "IPS_Array": {
                            "runAfter": {
                                "IPS": [
                                    "Succeeded"
                                ]
                            },
                            "type": "JavaScriptCode",
                            "inputs": {
                                "code": "var list = workflowContext.actions.IPS.outputs;\r\n\r\nconst search = 'IP: ';\r\nconst replaceWith = '';\r\n\r\nconst replace1 = list.split(search).join(replaceWith);\r\n\r\nconst searchRegExp = / .*/ig;\r\n\r\nconst ips = replace1.replace(searchRegExp, replaceWith).replace(/\\r\\n/ig,',').split(',');\r\n\r\nreturn ips;"
                            }
                        },
                        "IPS_JSON": {
                            "runAfter": {
                                "Month": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['ExtendedProperties']",
                                "schema": {
                                    "properties": {
                                        "Destination Port": {
                                            "type": "string"
                                        },
                                        "Investigation Steps": {
                                            "type": "string"
                                        },
                                        "ProcessedBySentinel": {
                                            "type": "string"
                                        },
                                        "Protocol": {
                                            "type": "string"
                                        },
                                        "Source IP(s) [Number of attempts]": {
                                            "type": "string"
                                        },
                                        "resourceType": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Init_Date": {
                            "runAfter": {
                                "Init_Priority_Max": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "date",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Init_Expiration": {
                            "runAfter": {
                                "Alert_-_Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "expiration",
                                        "type": "integer",
                                        "value": -90
                                    }
                                ]
                            }
                        },
                        "Init_NSG_Group": {
                            "runAfter": {
                                "Init_NSG_ResourceGroup": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "nsg_group",
                                        "type": "string",
                                        "value": "[parameters('NSG_Group')]"
                                    }
                                ]
                            }
                        },
                        "Init_NSG_ResourceGroup": {
                            "runAfter": {
                                "Init_Expiration": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "nsg_resourcegroup",
                                        "type": "string",
                                        "value": "[parameters('NSG_ResourceGroup')]"
                                    }
                                ]
                            }
                        },
                        "Init_NSG_Priorities": {
                            "runAfter": {
                                "Init_Date": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "priority",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Init_Priority_Max": {
                            "runAfter": {
                                "Init_Priority_Min": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "priority_max",
                                        "type": "integer",
                                        "value": 4000
                                    }
                                ]
                            }
                        },
                        "Init_Priority_Min": {
                            "runAfter": {
                                "Init_NSG_Group": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "priority_min",
                                        "type": "integer",
                                        "value": 3000
                                    }
                                ]
                            }
                        },
                        "List_NSG_Rules": {
                            "runAfter": {
                                "Priority_Max": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "headers": {
                                    "Content-type": "application/json"
                                },
                                "method": "GET",
                                "uri": "https://management.azure.com/subscriptions/@{triggerBody()?['WorkspaceSubscriptionId']}/resourceGroups/@{variables('nsg_resourcegroup')}/providers/Microsoft.Network/networkSecurityGroups?api-version=2020-07-01"
                            }
                        },
                        "Month": {
                            "runAfter": {
                                "NSG_Priority": [
                                    "Succeeded"
                                ]
                            },
                            "type": "JavaScriptCode",
                            "inputs": {
                                "code": "var timestamp = workflowContext.trigger.outputs.body.TimeGenerated;\r\n\r\nconst replaceWith = '';\r\n\r\nconst searchRegExp = /...T.*/ig;\r\n\r\nconst month = timestamp.replace(searchRegExp, replaceWith);\r\n\r\nreturn month;"
                            }
                        },
                        "NSG_JSON": {
                            "runAfter": {
                                "List_NSG_Rules": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('List_NSG_Rules')",
                                "schema": {
                                    "properties": {
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "etag": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "location": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "properties": {
                                                        "properties": {
                                                            "defaultSecurityRules": {
                                                                "items": {
                                                                    "properties": {
                                                                        "etag": {
                                                                            "type": "string"
                                                                        },
                                                                        "id": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "properties": {
                                                                            "properties": {
                                                                                "access": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": {
                                                                                    "type": "string"
                                                                                },
                                                                                "destinationAddressPrefix": {
                                                                                    "type": "string"
                                                                                },
                                                                                "destinationAddressPrefixes": {
                                                                                    "type": "array"
                                                                                },
                                                                                "destinationPortRange": {
                                                                                    "type": "string"
                                                                                },
                                                                                "destinationPortRanges": {
                                                                                    "type": "array"
                                                                                },
                                                                                "direction": {
                                                                                    "type": "string"
                                                                                },
                                                                                "priority": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "protocol": {
                                                                                    "type": "string"
                                                                                },
                                                                                "provisioningState": {
                                                                                    "type": "string"
                                                                                },
                                                                                "sourceAddressPrefix": {
                                                                                    "type": "string"
                                                                                },
                                                                                "sourceAddressPrefixes": {
                                                                                    "type": "array"
                                                                                },
                                                                                "sourcePortRange": {
                                                                                    "type": "string"
                                                                                },
                                                                                "sourcePortRanges": {
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name",
                                                                        "id",
                                                                        "etag",
                                                                        "type",
                                                                        "properties"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "networkInterfaces": {
                                                                "items": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "id"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "provisioningState": {
                                                                "type": "string"
                                                            },
                                                            "resourceGuid": {
                                                                "type": "string"
                                                            },
                                                            "securityRules": {
                                                                "items": {
                                                                    "properties": {
                                                                        "etag": {
                                                                            "type": "string"
                                                                        },
                                                                        "id": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "properties": {
                                                                            "properties": {
                                                                                "access": {
                                                                                    "type": "string"
                                                                                },
                                                                                "destinationAddressPrefix": {
                                                                                    "type": "string"
                                                                                },
                                                                                "destinationAddressPrefixes": {
                                                                                    "type": "array"
                                                                                },
                                                                                "destinationPortRange": {
                                                                                    "type": "string"
                                                                                },
                                                                                "destinationPortRanges": {
                                                                                    "type": "array"
                                                                                },
                                                                                "direction": {
                                                                                    "type": "string"
                                                                                },
                                                                                "priority": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "protocol": {
                                                                                    "type": "string"
                                                                                },
                                                                                "provisioningState": {
                                                                                    "type": "string"
                                                                                },
                                                                                "sourceAddressPrefixes": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "sourcePortRange": {
                                                                                    "type": "string"
                                                                                },
                                                                                "sourcePortRanges": {
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name",
                                                                        "id",
                                                                        "etag",
                                                                        "type",
                                                                        "properties"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "id",
                                                    "etag",
                                                    "type",
                                                    "location",
                                                    "properties"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "NSG_Priority": {
                            "runAfter": {
                                "NSG_Properties": [
                                    "Succeeded"
                                ]
                            },
                            "type": "JavaScriptCode",
                            "inputs": {
                                "code": "var priority = workflowContext.actions.NSG_Properties.outputs;\r\n\r\n\r\nvar list = new Array();\r\nfor(var i=workflowContext.actions.Priority_Min.outputs; i<workflowContext.actions.Priority_Max.outputs; i++)\r\n  if(!priority.includes(i))\r\n    list.push(i);\r\n\r\nvar rand = list[Math.floor(Math.random() * list.length)];\r\n\r\nreturn rand;"
                            }
                        },
                        "NSG_Properties": {
                            "runAfter": {
                                "For_Each_NSG_Rules": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "@variables('priority')"
                        },
                        "Priority_Max": {
                            "runAfter": {
                                "Priority_Min": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "@variables('priority_max')"
                        },
                        "Priority_Min": {
                            "runAfter": {
                                "Init_NSG_Priorities": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "@variables('priority_min')"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                                "connectionName": "[parameters('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}